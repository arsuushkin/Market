import telebot
from telebot import types
#from telethon import TelegramClient, events

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot('6057765064:AAEjWqOFQ23yjdxKn-VSoG7FWSdp1Iujsq4')

# –ó–∞–¥–∞–π—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
admin_chat_id = '455499371'

api_id = 'YOUR_API_ID'
api_hash = 'YOUR_API_HASH'

user_data = {}
contact_data = {}
shop_rules = [
    f"–ü—Ä–∞–≤–∏–ª–æ 1: üö® –ü–†–ò–ú–ï–†–ö–ò –ù–ï–¢üö®(–µ—Å–ª–∏ –ø–æ–º–µ—Ä–∏—Ç—å –æ–¥–Ω—É –≤–µ—â—å 20 —Ä–∞–∑, –æ–Ω–∞ –±—É–¥–µ—Ç —Ç–µ—Ä—è—Ç—å —Ç–æ–≤–∞—Ä–Ω—ã–π –≤–∏–¥) –ø—Ä–æ—Å–∏—Ç–µ –∑–∞–º–µ—Ä—ã‚úÖ \n",
    f"–ü—Ä–∞–≤–∏–ª–æ 2: üö®–û–±–º–µ–Ω–∞ –∏ –í–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ—Çüö®\n",
    f"–ü—Ä–∞–≤–∏–ª–æ 3: –ü–æ —Å–∞–º–æ–≤—ã–≤–æ–∑—É —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏(—Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–ª–Ω–æ–π –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ, –±–µ–∑ –æ–ø–ª–∞—Ç—ã –Ω–µ—Ç —Å–∞–º–æ–≤—ã–≤–æ–∑–∞) —Ç–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è, —á—Ç–æ–±—ã –æ—Ç—Å–µ—á—å –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è –∏ –Ω–µ –ø—Ä–∏–µ–∑–∂–∞—é—Ç –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏ –ø–µ—Ä–µ—Å—Ç–∞—é—Ç –æ—Ç–≤–µ—á–∞—Ç—å! \n",
    f"–ü—Ä–∞–≤–∏–ª–æ 4: –î–æ—Å—Ç–∞–≤–∫–∞ —Ç–∞–∫ –∂–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–ª–Ω–æ–π –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ  \n"
]

@bot.message_handler(func=lambda message: message.text == '/start')
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
    button2 = types.KeyboardButton('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
    button3 = types.KeyboardButton('–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
    button4 = types.KeyboardButton('–í—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä')
    markup.add(button4)
    markup.add(button1)
    markup.add(button2, button3)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–í—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä')
def start_choose(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_brand = types.KeyboardButton('–ë—Ä–µ–Ω–¥')
    button_categori = types.KeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
    markup.add(button_brand, button_categori)
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –ø–æ –±—Ä–µ–Ω–¥—É:', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ë—Ä–µ–Ω–¥')
def process_brand(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_Nike = types.KeyboardButton('Nike')
    button_Adidas = types.KeyboardButton('Adidas')
    button_Puma = types.KeyboardButton('Puma')
    button_Hoka = types.KeyboardButton('Hoka')
    button_Asics = types.KeyboardButton('Asics')
    button_New_Balance = types.KeyboardButton('New Balance')
    markup.add(button_Nike, button_Adidas)
    markup.add(button_New_Balance, button_Puma)
    markup.add(button_Asics, button_Hoka)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –±—Ä–µ–Ω–¥:', reply_markup=markup)
    bot.register_next_step_handler(message, process_categori)

@bot.message_handler(func=lambda message: message.text == '–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
def process_categori(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_Life_style = types.KeyboardButton('LifeStyle')
    button_Basketball = types.KeyboardButton('–ë–∞—Å–∫–µ—Ç–±–æ–ª')
    button_football = types.KeyboardButton('–§—É—Ç–±–æ–ª')
    button_run = types.KeyboardButton('–ë–µ–≥')
    button_show = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –í—Å–µ')
    markup.add(button_Life_style, button_Basketball)
    markup.add( button_football, button_run)
    markup.add(button_show)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=markup)
    bot.register_next_step_handler(message,process_show)

def process_show(message):
    bot.send_message(message.chat.id,'—è –µ—â–µ –Ω–µ –¥–æ–ø–µ—Ä, —Å–∫–æ—Ä–æ –≤—Å–µ —Å–¥–µ–ª–∞—é')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(button_main_menu)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ['Nike', 'Adidas', 'Puma', 'Hoka', 'Asics', 'New Balance'])
def process_brand_selected(message):
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤—ã–±–æ—Ä –±—Ä–µ–Ω–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    #bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –±—Ä–µ–Ω–¥: {message.text}')
    bot.register_next_step_handler(message,process_categori_selected)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(button_main_menu)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ['LifeStyle', '–ë–∞—Å–∫–µ—Ç–±–æ–ª', '–§—É—Ç–±–æ–ª', '–ë–µ–≥','–ü–æ–∫–∞–∑–∞—Ç—å –í—Å–µ'])
def process_categori_selected(message):
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {message.text}')

@bot.message_handler(func=lambda message: message.text == '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
def process_info(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_agree = types.KeyboardButton('–°–æ–≥–ª–∞—Å–µ–Ω')
    button_disagree = types.KeyboardButton('–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω')
    markup.add(button_agree, button_disagree)
    for i in range(len(shop_rules)):
        bot.send_message(message.chat.id, shop_rules[i], reply_markup=markup)
    bot.send_message(message.chat.id, '–°–æ–≥–ª–∞—Å–Ω—ã –ª–∏ –≤—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞?', reply_markup=markup)
    bot.register_next_step_handler(message, process_agreement)

def process_agreement(message):
    agreement = message.text
    if agreement == '–°–æ–≥–ª–∞—Å–µ–Ω':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞—Ä—Ç–∏–∫—É–ª–∞ –∑–∞–∫–∞–∑–∞:')
        bot.register_next_step_handler(message, process_article_number)
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞.')
        start(message)

def process_article_number(message):
    article_number = message.text
    user_data[message.chat.id] = {'article_number': article_number}
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –Ω–æ–≥–∏ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö:')
    bot.register_next_step_handler(message, process_foot_size)

def process_foot_size(message):
    foot_size = message.text
    user_data[message.chat.id]['foot_size'] = foot_size
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ) –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:')
    bot.register_next_step_handler(message, process_full_name)


def process_full_name(message):
    full_name = message.text
    user_data[message.chat.id]['full_name'] = full_name
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:')
    bot.register_next_step_handler(message, process_address)

def process_address(message):
    address = message.text
    user_data[message.chat.id]['address'] = address
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –¥–ª—è —Å–≤—è–∑–∏:')
    bot.register_next_step_handler(message, process_telegram_profile)

def process_telegram_profile(message):
    telegram_profile = message.text
    user_data[message.chat.id]['telegram_profile'] = telegram_profile
    send_order_form(message)

def send_order_form(message):
    if 'article_number' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–º–µ—Ä–µ –∞—Ä—Ç–∏–∫—É–ª–∞ –∑–∞–∫–∞–∑–∞.')
        return

    if 'foot_size' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–º–µ—Ä–µ –Ω–æ–≥–∏.')
        return


    if 'full_name' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û.')
        return

    if 'address' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥—Ä–µ—Å–µ.')
        return

    if 'telegram_profile' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ Telegram.')
        return

    order_details = f"–ù–æ–º–µ—Ä –∞—Ä—Ç–∏–∫—É–ª–∞: {user_data[message.chat.id]['article_number']}\n" \
                    f"–†–∞–∑–º–µ—Ä –Ω–æ–≥–∏: {user_data[message.chat.id]['foot_size']} —Å–º\n" \
                    f"–§–ò–û: {user_data[message.chat.id]['full_name']}\n" \
                    f"–ê–¥—Ä–µ—Å: {user_data[message.chat.id]['address']}\n" \
                    f"–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –ø—Ä–æ—Ñ–∏–ª—å: {user_data[message.chat.id]['telegram_profile']}\n"

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –∑–∞–∫–∞–∑–∞:')
    bot.send_message(message.chat.id, order_details)

    bot.send_message(admin_chat_id, '–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –∑–∞–∫–∞–∑–∞:')
    bot.send_message(admin_chat_id, order_details)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    button_order_status = types.KeyboardButton('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
    markup.add(button_main_menu, button_order_status)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
def check_order_status(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:')
    bot.register_next_step_handler(message, process_order_status)

def process_order_status(message):
    order_number = message.text
    user_data[message.chat.id] = {'order_number': order_number}
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ) –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:')
    bot.register_next_step_handler(message, process_full_name_status)

def process_full_name_status(message):
    full_name = message.text
    user_data[message.chat.id]['full_name'] = full_name
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –¥–ª—è —Å–≤—è–∑–∏:')
    bot.register_next_step_handler(message, process_telegram_profile_status)

def process_telegram_profile_status(message):
    telegram_profile = message.text
    user_data[message.chat.id]['telegram_profile'] = telegram_profile
    send_order_status(message)

def send_order_status(message):
    if 'order_number' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–º–µ—Ä–µ –∑–∞–∫–∞–∑–∞.')
        return

    if 'full_name' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û.')
        return

    if 'telegram_profile' not in user_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ Telegram.')
        return

    order_details = f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {user_data[message.chat.id]['order_number']}\n" \
                    f"–§–ò–û: {user_data[message.chat.id]['full_name']}\n" \
                    f"–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –ø—Ä–æ—Ñ–∏–ª—å: {user_data[message.chat.id]['telegram_profile']}\n"

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –∑–∞–∫–∞–∑–∞:')
    bot.send_message(message.chat.id, order_details)

    bot.send_message(admin_chat_id, '–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –∑–∞–∫–∞–∑–∞:')
    bot.send_message(admin_chat_id, order_details)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_main_menu = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    button_order_status = types.KeyboardButton('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
    markup.add(button_main_menu, button_order_status)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
def process_call_reason(message):
    bot.send_message(message.chat.id, '–ü–æ –∫–∞–∫–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º?')
    bot.register_next_step_handler(message, process_call_reason_details)

def process_call_reason_details(message):
    call_reason = message.text
    contact_data[message.chat.id] = {'call_reason': call_reason}
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ) –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:')
    bot.register_next_step_handler(message, process_full_name_and_profile)

def process_full_name_and_profile(message):
    full_name = message.text
    contact_data[message.chat.id]['full_name'] = full_name
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –¥–ª—è —Å–≤—è–∑–∏:')
    bot.register_next_step_handler(message, process_telegram_profile_contact)

def process_telegram_profile_contact(message):
    telegram_profile = message.text
    contact_data[message.chat.id]['telegram_profile'] = telegram_profile
    send_contact_request(message)

def send_contact_request(message):
    if 'call_reason' not in contact_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏—á–∏–Ω–µ –æ–±—Ä–∞—â–µ–Ω–∏—è.')
        return

    if 'full_name' not in contact_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û.')
        return

    if 'telegram_profile' not in contact_data[message.chat.id]:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ Telegram.')
        return

    contact_details = f"–ü—Ä–∏—á–∏–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è: {contact_data[message.chat.id]['call_reason']}\n" \
                      f"–§–ò–û: {contact_data[message.chat.id]['full_name']}\n" \
                      f"–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –ø—Ä–æ—Ñ–∏–ª—å: {contact_data[message.chat.id]['telegram_profile']}\n"

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –° –≤–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Ç—Å—è.')
    bot.send_message(admin_chat_id, '–° –≤–∞–º–∏ —Ö–æ—Ç—è—Ç —Å–≤—è–∑–∞—Ç—å—Å—è:')
    bot.send_message(admin_chat_id, contact_details)

@bot.message_handler(func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def return_to_main_menu(message):
    start(message)

bot.polling(none_stop=True, timeout=60)
